{"version":3,"sources":["components/DeleteButton.js","views/ShowPlayers.js","views/AddPlayer.js","views/PlayerStatus.js","App.js","serviceWorker.js","index.js"],"names":["DeleteButton","props","onClick","window","confirm","axios","delete","id","then","callback","catch","err","console","log","className","ShowPlayers","useState","players","setPlayers","getPlayers","get","res","data","useEffect","style","border","to","map","player","i","key","name","pref_pos","_id","AddPlayer","input","setInput","errors","setErrors","error","color","length","onSubmit","e","preventDefault","post","navigate","errorResponse","response","errorArr","Object","keys","push","message","type","onChange","target","value","placeholder","disabled","PlayerStatus","setState","clicked","setClicked","onClickHandler","temp","put","margin","padding","boxShadow","backgroundColor","App","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f7367d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from \"axios\"\r\n\r\nconst DeleteButton = props => {\r\n    const onClickHandler = () => {\r\n        if(window.confirm('Are you sure you want to delete this player?')) {\r\n            axios.delete('http://localhost:8000/api/players/' + props.id + '/delete')\r\n            .then(() => props.callback())\r\n            .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <button onClick={onClickHandler} className='btn-danger'>Delete</button>\r\n    )\r\n}\r\n\r\nexport default DeleteButton;","import React, {useState, useEffect} from 'react'\r\nimport {Link} from '@reach/router'\r\nimport axios from \"axios\"\r\nimport DeleteButton from '../components/DeleteButton'\r\n\r\nconst ShowPlayers = () => {\r\n    const [players, setPlayers] = useState([])\r\n\r\n    const getPlayers = () => {\r\n        axios.get('http://localhost:8000/api/players')\r\n            .then(res => setPlayers(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlayers();\r\n    }, [])\r\n\r\n    return(\r\n        <div className='m-3 p-2' style={{border: '2px solid black'}}>\r\n            <div className='container text-left mb-1'>\r\n                <Link to='/players/list' className='h3'>List</Link> <span className='h3'> | </span>\r\n                <Link to='/players/add' className='h3'>Add Player</Link>\r\n            </div>\r\n            <table className='table mt-4'>\r\n                <thead>\r\n                    <tr className='text-left'>\r\n                        <th>Player</th>\r\n                        <th>Preferred Position</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players && players.map((player, i) => (\r\n                        <tr className='text-left' key={i}>\r\n                            <td>{player.name}</td>\r\n                            <td>{player.pref_pos ? player.pref_pos : ''}</td>\r\n                            <td><DeleteButton id={player._id} callback={getPlayers}/></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowPlayers;","import React, {useState} from 'react'\r\nimport {Link, navigate} from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst AddPlayer = () => {\r\n    const [input, setInput] = useState({name: '', pref_pos: ''})\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8000/api/players/create', {...input})\r\n            .then(() => navigate('/players/list'))\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for(const key of Object.keys(errorResponse)) {\r\n                    errorArr.push(errorResponse[key].message);\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='m-3 p-2' style={{border: '2px solid black'}}>\r\n            <div className='container text-left mb-1'>\r\n                <Link to='/players/list' className='h3'>List</Link> <span className='h3'> | </span>\r\n                <Link to='/players/add' className='h3'>Add Player</Link>\r\n            </div>\r\n\r\n            <div className='mt-2 p-3'>\r\n                <h3 className='text-left'>Add Player</h3>\r\n\r\n                {errors && errors.map((error, i) => (\r\n                    <p className='text-left' key={i} style={{color: 'red'}}>{error}</p>\r\n                ))}\r\n\r\n                {input.name.length === 1 ? <p className='text-left' style={{color: 'red'}}>Name must be at least 2 characters long</p> : null}\r\n\r\n                <form onSubmit={onSubmitHandler}>\r\n                    <input type=\"text\"\r\n                           className='form-control'\r\n                           onChange={(e) => setInput({...input, [e.target.name]: e.target.value})}\r\n                           name='name'\r\n                           placeholder='Player Name'\r\n                    />\r\n                    <input type=\"text\"\r\n                           className=\"form-control mt-2\"\r\n                           onChange={(e) => setInput({...input, [e.target.name]: e.target.value})}\r\n                           name='pref_pos'\r\n                           placeholder='Preferred Position (optional)'\r\n                    />\r\n                    {input.name.length < 2 \r\n                        ? <button type='submit' className=\"btn btn-primary mt-2\" disabled>Add</button> \r\n                        : <button type='submit' className=\"btn btn-primary mt-2\">Add</button>\r\n                    }\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPlayer;","import React, { useEffect, useState } from 'react'\r\nimport {Link} from '@reach/router'\r\nimport axios from 'axios'\r\n\r\nconst PlayerStatus = props => {\r\n    const [players, setState] = useState([])\r\n    const [clicked, setClicked] = useState(false)\r\n    const {id} = props;\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/players')\r\n            .then(res => setState(res.data))\r\n            .catch(err => console.log(err))\r\n    }, [clicked])\r\n\r\n    const onClickHandler = (e, player) => {\r\n        let temp = {...player};\r\n        temp['status']['game' + id] = e.target.value;\r\n        axios.put('http://localhost:8000/api/players/' + player._id + '/update', temp)\r\n            .then(() => setClicked(!clicked))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className='m-3 p-2' style={{border: '2px solid black'}}>\r\n            <h1>Player Status - Game {id}</h1>\r\n\r\n            <Link className='h3' to='/status/game/1'>Game 1</Link> <span className='h3'> | </span>\r\n            <Link className='h3' to='/status/game/2'>Game 2</Link> <span className='h3'> | </span>\r\n            <Link className='h3' to='/status/game/3'>Game 3</Link>\r\n\r\n            <table className='table mt-4'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='text-left' >Player Name</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players && players.map((player, i) => (\r\n                        <tr key={i}>\r\n                            <td className='text-left'>{player.name}</td>\r\n                            <td className='pl-5'>\r\n                                <button style={{border: '1px solid black',\r\n                                                margin: '0px 5px',\r\n                                                padding: '0px 15px',\r\n                                                boxShadow: '1px 1px black',\r\n                                                backgroundColor: player['status']['game'+id] === 'Playing' ? 'green' : 'ghostwhite',\r\n                                                color: player['status']['game'+id] === 'Playing' ? 'white' : 'black'\r\n                                            }}\r\n                                        onClick={(e) => onClickHandler(e, player)}\r\n                                        value='Playing'\r\n                                >Playing</button>\r\n\r\n                                <button style={{border: '1px solid black',\r\n                                                margin: '0px 5px',\r\n                                                padding: '0px 15px',\r\n                                                boxShadow: '1px 1px black',\r\n                                                backgroundColor: player['status']['game'+id] === 'Not Playing' ? 'red' : 'ghostwhite',\r\n                                                color: player['status']['game'+id] === 'Not Playing' ? 'white' : 'black'\r\n                                            }}\r\n                                        onClick={(e) => onClickHandler(e, player)}\r\n                                        value='Not Playing'\r\n                                >Not Playing</button>\r\n\r\n                                <button style={{border: '1px solid black',\r\n                                                margin: '0px 5px',\r\n                                                padding: '0px 15px',\r\n                                                boxShadow: '1px 1px black',\r\n                                                backgroundColor: player['status']['game'+id] === 'Undecided' ? 'yellow' : 'ghostwhite',\r\n                                            }}\r\n                                        onClick={(e) => onClickHandler(e, player)}\r\n                                        value='Undecided'\r\n                                >Undecided</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerStatus;","import React from 'react';\nimport './App.css';\nimport {Link, Router} from '@reach/router'\nimport ShowPlayers from \"./views/ShowPlayers\";\nimport AddPlayer from \"./views/AddPlayer\";\nimport PlayerStatus from \"./views/PlayerStatus\";\n\nfunction App() {\n  return (\n    <div className=\"App container mt-2\">\n      <div>\n        <Link to='/players/list' className='h3'>Manage Players</Link> <span className='h3'> | </span>\n        <Link to='/status/game/1' className='h3'>Manage Player Status</Link>\n      </div>\n\n      <Router>\n        <ShowPlayers path='/players/list' />\n        <AddPlayer path='/players/add' />\n        <PlayerStatus path='/status/game/:id' />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}